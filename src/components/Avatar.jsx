/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 public/models/Ranak.glb
*/
import * as THREE from "three";
import React, { useEffect, useRef } from 'react'
import { useAnimations, useGLTF, useFBX } from '@react-three/drei'


export function Avatar(props) {
  const group=useRef()

  const {animation,scale,rotY,rotX} = props

  const { nodes, materials } = useGLTF('models/Ranak.glb')

  const {animations: hiphop} = useFBX("animations/hiphop.fbx");
  hiphop[0].name="hiphop"

  const {animations: flipKick} = useFBX("animations/flipKick.fbx");
  flipKick[0].name="flipKick"

  const {animations: jog} = useFBX("animations/jog.fbx");
  jog[0].name="jog"



  const {animations: hurricane} = useFBX("animations/hurricane.fbx");
  hurricane[0].name="hurricane"

  const {actions} = useAnimations([hiphop[0],flipKick[0],jog[0],hurricane[0]],group)




  useEffect(() => {
    actions[animation].reset().fadeIn(1).play();
    return () => {
      actions[animation].reset().fadeOut(2);
    };
  }, [animation]);

  return (
    
    <group {...props} ref={group} dispose={null} scale={scale} rotation-y={rotY}  rotation-x={rotX} >
      <group rotation-x={-Math.PI/2}>
      <primitive object={nodes.Hips} />
      <skinnedMesh geometry={nodes.Wolf3D_Avatar_Transparent.geometry} material={materials.Wolf3D_Avatar_Transparent} skeleton={nodes.Wolf3D_Avatar_Transparent.skeleton} />
      <skinnedMesh name="Wolf3D_Avatar" geometry={nodes.Wolf3D_Avatar.geometry} material={materials.Wolf3D_Avatar} skeleton={nodes.Wolf3D_Avatar.skeleton} morphTargetDictionary={nodes.Wolf3D_Avatar.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Avatar.morphTargetInfluences} />
    </group>
    </group>
  )
}

useGLTF.preload('models/Ranak.glb')